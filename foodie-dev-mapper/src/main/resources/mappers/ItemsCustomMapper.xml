<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.htf.mapper.ItemsCustomMapper" >

  <select id="queryItemComments" resultType="com.htf.vo.ItemCommentVO">
    select
      ic.comment_level as commentLevel,
      ic.content as content,
      ic.sepc_name as specName,
      ic.created_time as createdTime,
      u.face as userFace,
      u.nickname as nickname
    from
      items_comments ic
    left join
      users u
    on
      ic.user_id = u.id
    where
      ic.item_id = #{itemId}
    <if test="level != null and level != ''">
      and ic.comment_level = #{level}
    </if>
  </select>

  <select id="searchItems" resultType="com.htf.vo.SearchItemsVO">
    select
        i.id as itemId,
        i.item_name as itemName,
        i.sell_counts as sellCounts,
        ii.url as imgUrl,
        tempSpec.price_discount as price
    from
        items i
    left join
        items_img ii
    on i.id = ii.item_id
    left join
        (
            select
                item_id,
                min(price_discount) as price_discount
            from
                items_spec
            group by
                item_id
        )tempSpec
    on i.id = tempSpec.item_id
    where
        ii.is_main = 1
        <if test="keywords != null and keywords != '' ">
            and i.item_name like '%${keywords}%'
        </if>
        order by
        <choose>
            <when test="sort == &quot;c&quot; ">
                i.sell_counts desc
            </when>
            <when test="sort == &quot;p&quot; ">
                tempSpec.price_discount asc
            </when>
            <otherwise>
                i.item_name asc
            </otherwise>

        </choose>
  </select>

    <select id="searchItemsByThirdCat" resultType="com.htf.vo.SearchItemsVO">
        select
            i.id as itemId,
            i.item_name as itemName,
            i.sell_counts as sellCounts,
            ii.url as imgUrl,
            tempSpec.price_discount as price
        from
            items i
        left join
            items_img ii
        on i.id = ii.item_id
        left join
            (
            select
            item_id,
            min(price_discount) as price_discount
            from
            items_spec
            group by
            item_id
            )tempSpec
        on i.id = tempSpec.item_id
        where
          ii.is_main = 1
        and i.cat_id = #{catId}
        order by
        <choose>
            <when test="sort == &quot;c&quot; ">
                i.sell_counts desc
            </when>
            <when test="sort == &quot;p&quot; ">
                tempSpec.price_discount asc
            </when>
            <otherwise>
                i.item_name asc
            </otherwise>

        </choose>
    </select>

    <select id="queryItemsBySpecIds" resultType="com.htf.vo.ShopcartVO">
        select
            t.id as itemId,
            t.item_name as itemName,
            t_ii.url as itemImgUrl,
            t_isp.id as specId,
            t_isp.`name` as specName,
            t_isp.price_discount as priceDiscount,
            t_isp.price_normal as priceNormal
        from
            items_spec t_isp
        left join
            items t
        on t.id = t_isp.item_id
        left join
            items_img t_ii
        on t.id = t_ii.item_id
        where t_ii.is_main = 1
        and t_isp.id in
        <foreach collection="paramsList" index="index" item="specId" open="(" separator="," close=")">
            #{specId}
        </foreach>

    </select>

    <update id="decreaseItemSpecStock">
        update
            items_spec
        set
            stock = stock - #{pendingCounts}
        where
            id = #{specId}
        and
            stock >= #{pendingCounts}
    </update>

</mapper>